quit
s
n
display i
display primes
quit
s
display arr[j]
display arr[i]
s
display ((i + 1)...arr.length).to_a
s
display [i, j]
s
display j
display i
display pairs
display arr
quit
s
n
s
display j
display i
s
display ((i + 1)...arr.length).to_a
display pairs
display arr
quit
display arr
s
display mid_idx
quit
display joined_str
n
display el.to_s
s
display el
display i
display joined_str
display arr
display separator
display separatro
quit
s
display arr.take(split_idx)
display arr.drop(split_idx)
display split_idx
quit
n
display arr.take(split_idx)
display arr.drop(split_idx)
display split_idx
quit
n
s
display i
s
display primes.length
display primes
display n
quit
n
s
display i
display primes
display n
quit
s
n
s
display i
display primes
display n
quit
n
display i
s
display primes
display n
continue
n
s
display i
display primes[-1]
display primes
quit
n
display i
s
display primes
quit
n
s
display primes
quit
n
s
display num_check
display primes
quit
display primes[-1]
n
s
display primes
display n
display number
quit
n
step
display n
display primes
display number
quit
c
s
display host_arr
quit
n
s
display host_arr
quit
s
display host_arr
c
s
display host_arr
quit
n
s
display host_arr
quit
n
display host_arr
quit
display host_arr
quit
n
next
display num_check
display primes
c
display num_check
display primes
quit
s
display num_check
display primes
continue
step
display num_check
display primes
quit
display num_check
display primes
primes num_check
display primes
c
next
step
display num_check
display primes
quit
n
next
step
next
step
display num_check
display primes
